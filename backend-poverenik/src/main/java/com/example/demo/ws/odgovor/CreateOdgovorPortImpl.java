
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.example.demo.ws.odgovor;

import java.util.logging.Logger;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.w3c.dom.Document;

import com.example.demo.parser.DOMParser;
import com.example.demo.repository.xml.OdgovorExist;

import com.example.demo.service.odgovor.OdgovorService;

/**
 * This class was generated by Apache CXF 3.3.0 2021-01-06T14:32:19.333+01:00
 * Generated source version: 3.3.0
 *
 */

@javax.jws.WebService(serviceName = "CreateOdgovorService", portName = "CreateOdgovorPort", targetNamespace = "http://demo.example.com/ws/odgovor", wsdlLocation = "classpath:wsdl/Odgovor.wsdl", endpointInterface = "com.example.demo.ws.odgovor.CreateOdgovor")
@Component
public class CreateOdgovorPortImpl implements CreateOdgovor {

<<<<<<< HEAD
    private static final Logger LOG = Logger.getLogger(CreateOdgovorPortImpl.class.getName());
    
    @Autowired
    private OdgovorService odgovorService;

    /* (non-Javadoc)
     * @see com.example.demo.ws.odgovor.CreateOdgovor#createOdgovor(java.lang.String createOdgovor)*
     */
    public void createOdgovor(java.lang.String createOdgovor) {
        LOG.info("Executing operation createOdgovor");
        System.out.println(createOdgovor);
        this.odgovorService.add(createOdgovor);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }
=======
	private static final Logger LOG = Logger.getLogger(CreateOdgovorPortImpl.class.getName());

	@Autowired
	private OdgovorExist odgovorRepository;

	@Autowired
	private DOMParser domParser;

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.example.demo.ws.odgovor.CreateOdgovor#createOdgovor(java.lang.String
	 * createOdgovor)*
	 */
	public void createOdgovor(java.lang.String createOdgovor) {
		LOG.info("Executing operation createOdgovor");
		System.out.println(createOdgovor);
		try {
			Document odgovorDocument = this.domParser.buildDocument(createOdgovor);
			this.odgovorRepository.save(null, odgovorDocument);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}
>>>>>>> 05352031953df735d6bbc76f3eb73c17b6072141

}
